{"title":"css3新特性和布局","slug":"es6","date":"2020-03-14T12:33:44.000Z","updated":"2021-07-20T06:46:47.370Z","comments":true,"path":"api/articles/es6.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p>Es6的模板字符串有哪些新特性</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t基本的字符串格式化</span><br><span class=\"line\">\t将表达式嵌入字符串中进行拼接</span><br><span class=\"line\">用$&#123;&#125;来界定在es5时我们通过反斜杠（）来做多行字符串或者字符串一行行拼接，es6反引号（··）就能解决类模板字符串的功能</span><br></pre></td></tr></table></figure>\n\n<p>介绍下set、map的区别</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">应用场景set用于数据重组，map用于数据储存</span><br><span class=\"line\">\tset：</span><br><span class=\"line\">\t\t<span class=\"number\">1.</span>成员不鞥你重复</span><br><span class=\"line\">\t\t<span class=\"number\">2.</span>只有键值没有键名，类似数组</span><br><span class=\"line\">\t\t<span class=\"number\">3.</span>可以遍历，方法有add，<span class=\"keyword\">delete</span>，has</span><br><span class=\"line\">\tmap：</span><br><span class=\"line\">\t\t<span class=\"number\">1.</span>本质上是键值对的集合，类似集合</span><br><span class=\"line\"><span class=\"number\">2.</span>可以遍历，可以跟各种数据格式转换</span><br></pre></td></tr></table></figure>\n\n<p>ECMAScript6怎么写class，为何会出现class？</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Es6的<span class=\"class\"><span class=\"keyword\">class</span>可以看做是一个语法糖，它的绝大部分功能<span class=\"title\">es5</span>都可以做到，新的<span class=\"title\">class</span>写法只是让对象原型的写法更加清晰、更像面向对象编程的语法</span></span><br></pre></td></tr></table></figure>\n\n<p>setTimeout、promise、async/await的区别</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">事件循环中分为宏任务队列和微任务队列其中<span class=\"built_in\">setTimeout</span>的回调函数放在宏任务队列里，等到执行栈清空以后执行promise.then里的回调函数会放到响应宏任务的微任务队列里，等宏任务里面的同步代码执行完在执行<span class=\"keyword\">async</span>函数标识函数里面可能会有异步的方法，<span class=\"keyword\">await</span>后面跟一个表达式<span class=\"keyword\">async</span>方法执行时，遇到<span class=\"keyword\">await</span>会立即执行表达式，然后把表达式后面的代码放到微任务队列里，让出执行栈让同步代码先执行</span><br></pre></td></tr></table></figure>\n\n<p>forEach、for in 、 for of 三者区别</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">foreach更多的用来遍历数组</span><br><span class=\"line\"> <span class=\"keyword\">for</span> <span class=\"keyword\">in</span> 一般常用来遍历对象或者jsonfor <span class=\"keyword\">of</span>数组对象都可以遍历，遍历对象需要通过和object.keys（） </span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"keyword\">in</span>循环出的是key，<span class=\"keyword\">for</span> <span class=\"keyword\">of</span>循环出的是value</span><br></pre></td></tr></table></figure>","categories":[],"tags":[]}