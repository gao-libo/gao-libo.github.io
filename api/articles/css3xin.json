{"title":"css3新特性和布局","slug":"css3xin","date":"2019-11-02T02:12:36.000Z","updated":"2021-07-20T06:46:23.737Z","comments":true,"path":"api/articles/css3xin.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p>什么是flex布局</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flex是flexible box的缩写，顾名思义为弹性布局，用来为盒装模型提供最大的灵活性</span><br></pre></td></tr></table></figure>\n\n<p>布局种类</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">静态布局</span><br><span class=\"line\">自适应布局</span><br><span class=\"line\">流式布局（又叫%半分比布局）</span><br><span class=\"line\">响应式布局:媒体查询</span><br><span class=\"line\">弹性布局（rem/em/flex布局）</span><br></pre></td></tr></table></figure>\n\n<p>静态布局</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">最传统的布局方式，网页中所有尺寸都是由px作为单位，设置了min-width，如果宽度小于就会出现滚动条，如果大于这个宽度则内容居中外加背景</span><br><span class=\"line\">px：实现方式</span><br><span class=\"line\">\tpc：居中布局，所有样式使用绝对宽度/高度（px），设计一个layout，在屏幕宽高有调整时，使用横向和竖向的滚动条来查阅被遮掩部分</span><br><span class=\"line\">\t移动设备：另外建立移动网站，单独设计一个布局，使用不同的域名如wap.或m</span><br><span class=\"line\">\t优点：采用之前的css2的布局-方式，布局简单，没有兼容性问题</span><br><span class=\"line\">缺点：在手机端不能合理的显示，移动端不能使用pc端页面，需要写一个布局来呈现</span><br></pre></td></tr></table></figure>\n\n<p>自适应布局</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">可以看成是不同屏幕下由多个静态布局组成的，自适应布局是为不同的屏幕分辨率分别定义不同的布局，改变屏幕分辨率可以切换不同的静态布局（页面元素位置可能发生改变），但在每个静态布局中，页面元素不随窗口大小的调整发生变化</span><br><span class=\"line\">自适应布局页面里面元素的位置会变化，很好的解决了流式布局中的大屏控件利用率不高弊端，屏幕分辨率变化时，页面里面元素的位置变化而大小不会变化</span><br></pre></td></tr></table></figure>\n\n<p>流式布局</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">网页总主要的划分区域的尺寸使用百分数（搭配min-*、max-属性使用）、分别为不同的屏幕设置布局格式，当屏幕大小改变时，会出现不同的布局。</span><br><span class=\"line\">意思就是在这个屏幕下这个元素快在这个地方，但是在那个屏幕下，这个元素快又会出现在那个地方，只是布局改变，元素不变，可以看成是不同屏幕下由多个静态布局组成的。</span><br><span class=\"line\">而流式布局的特点是随着屏幕的改变，页面的布局没有发生大的变化，可以进行适配调整，这个正好与自适应布局相补，，使用%定义宽度，高度大都是用px来固定住，可以根据可视区域和父元素的实时尺寸进行调整，尽可能的适应各种分辨率</span><br><span class=\"line\">往往配合max-width/min-width等属性控制尺寸流动范围以免过大或者过小影响阅读，这种布局方式咋iweb前端开发的早期历史上，用来应对不同尺寸的pc屏幕（那是屏幕尺寸的差异不会太大），在当今的移动端开发也是常用布局方式</span><br></pre></td></tr></table></figure>\n\n<p>响应式布局</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过响应式设计能使网站在手机和平板电脑上有更好的浏览阅读体验，屏幕尺寸不一样展示给用户的网页内容也不一样，利用媒体查询可以检测到屏幕的尺寸（主要检测宽度），并设置不同的css样式，就可以实现响应式布局，主要依靠css的媒体查询</span><br><span class=\"line\">每个屏幕分辨率下面会有一个布局样式，即元素位置和大小都会变</span><br></pre></td></tr></table></figure>\n\n<p>弹性布局</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rem/em</span><br><span class=\"line\">flex布局</span><br></pre></td></tr></table></figure>\n\n<p>边框</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Border-radius：圆角</span><br><span class=\"line\">Border-image：边框图片</span><br><span class=\"line\">      Box-shadow：阴影</span><br></pre></td></tr></table></figure>\n\n<p>背景</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Css3新增了几个关于背景的属性，分别是background-clip、background-origin、background-size和background-<span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<p>文字效果</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\tText-overflow规定当文本移除包含元素时发生的事情text-overflow:ellipsis（）</span><br><span class=\"line\">\tWord-wrap 强制文本换行</span><br><span class=\"line\">\ttext-shadow：文本阴影，能够规定水平阴影、垂直阴影、模糊巨鹿、以及阴影的颜色。H1&#123;text-shadow:5px 5px 5px red&#125;</span><br><span class=\"line\">\tText-decoration</span><br><span class=\"line\">\t\tCss3里面开始支持对文字的更深层次的渲染，具体有三个属性可供设置</span><br><span class=\"line\">\t\tText-fill-color:设置文字内部填充颜色</span><br><span class=\"line\">\t\tText-stroke-color:设置文字边界填充颜色</span><br><span class=\"line\">\t\tText-stroke-width:设置文字边界宽度渐变</span><br><span class=\"line\">linear-gradient（线性渐变）和radial-gradient(径向渐变)</span><br><span class=\"line\">\t\t多列布局</span><br><span class=\"line\">\t\tcolumn-count  column-width column-gap column-rule</span><br><span class=\"line\">\t\t界面</span><br><span class=\"line\">CSS3中，新的用户界面特性包括重设元素尺寸、盒尺寸以及轮廓等。Firefox、Chrome以及Safari 支持resize属性。IE、Chrome、Safari以及Opera支持box-sizing属性。Firefox需要前缀-moz-。所有主流浏览器都支持outline-offset属性，除了IE。</span><br></pre></td></tr></table></figure>","categories":[],"tags":[]}